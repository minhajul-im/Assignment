generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Brand {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  barndName  String    @db.VarChar(40)
  barndImage String?   @db.VarChar(200)
  createdAt  DateTime  @default(now()) @db.Timestamp(0)
  updatedAt  DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  product    Product[]
}

model Category {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  categoryName  String    @db.VarChar(50)
  categoryImage String    @db.VarChar(200)
  createdAt     DateTime  @default(now()) @db.Timestamp(0)
  updatedAt     DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  product       Product[]
}

enum remark {
  new
  trending
  popular
}

model Product {
  id             BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  title          String           @db.VarChar(100)
  description    String           @db.VarChar(220)
  price          String           @db.VarChar(20)
  discount       String?          @db.TinyText
  discountPrice  String?          @db.VarChar(20)
  image          String           @db.VarChar(200)
  star           Float?           @db.Double
  sock           String?          @db.VarChar(20)
  remark         remark?
  brandId        BigInt           @db.UnsignedBigInt
  categoryId     BigInt           @db.UnsignedBigInt
  createdAt      DateTime         @default(now()) @db.Timestamp(0)
  updatedAt      DateTime         @default(now()) @updatedAt @db.Timestamp(0)
  brand          Brand            @relation(fields: [brandId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  category       Category         @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  productDetails ProductDetail?
  ProductSlider  ProductSlider?
  WhisesList     WhisesList[]
  ProductCard    ProductCard[]
  ProductInvoice ProductInvoice[]
  ProductReview  ProductReview[]
}

model ProductDetail {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  image1    String   @db.VarChar(200)
  image2    String   @db.VarChar(200)
  image3    String   @db.VarChar(200)
  image4    String   @db.VarChar(200)
  productId BigInt   @unique @db.UnsignedBigInt
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model ProductSlider {
  id               BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  title            String   @db.VarChar(60)
  shortDescription String   @db.VarChar(150)
  price            String   @db.VarChar(20)
  productId        BigInt   @unique @db.UnsignedBigInt
  createdAt        DateTime @default(now()) @db.Timestamp(0)
  updatedAt        DateTime @default(now()) @updatedAt @db.Timestamp(0)
  product          Product  @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model User {
  id          BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  username    String        @unique @db.VarChar(30)
  email       String        @unique @db.VarChar(40)
  otp         String        @unique @db.VarChar(6)
  createdAt   DateTime      @default(now()) @db.Timestamp(0)
  updatedAt   DateTime      @default(now()) @updatedAt @db.Timestamp(0)
  userProfile UserProfile?
  whisesList  WhisesList[]
  productCard ProductCard[]
  invice      Invoice[]
}

model UserProfile {
  id               BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  customarName     String          @db.VarChar(50)
  customarPhone    String          @db.VarChar(15)
  customarAddress  String          @db.VarChar(100)
  customarCity     String          @db.VarChar(50)
  customarPostcode String          @db.VarChar(20)
  customarState    String          @db.VarChar(20)
  shippingName     String          @db.VarChar(50)
  shippingPhone    String          @db.VarChar(15)
  shippingAddress  String          @db.VarChar(100)
  shippingCity     String          @db.VarChar(50)
  shippingPostcode String          @db.VarChar(20)
  shippingState    String          @db.VarChar(20)
  userId           BigInt          @unique @db.UnsignedBigInt
  createdAt        DateTime        @default(now()) @db.Timestamp(0)
  updatedAt        DateTime        @default(now()) @updatedAt @db.Timestamp(0)
  user             User            @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  productReview    ProductReview[]
}

model WhisesList {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  userId    BigInt   @db.UnsignedBigInt
  productId BigInt   @db.UnsignedBigInt
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
  user      User     @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model ProductCard {
  id        BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  size      String  @db.VarChar(10)
  color     String  @db.VarChar(40)
  quantity  String  @db.VarChar(40)
  userId    BigInt  @db.UnsignedBigInt
  productId BigInt  @db.UnsignedBigInt
  user      User    @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

enum delivary {
  Processing
  On_the_way
  Completed
}

model Invoice {
  id             BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  total          String           @db.VarChar(10)
  vat            String           @db.VarChar(10)
  payment        String           @db.VarChar(10)
  customarDetail String           @db.VarChar(100)
  shippingDetail String           @db.VarChar(100)
  transactionId  String           @db.VarChar(30)
  deliveryStatus delivary
  userId         BigInt           @db.UnsignedBigInt
  createdAt      DateTime         @default(now()) @db.Timestamp(0)
  updatedAt      DateTime         @default(now()) @updatedAt @db.Timestamp(0)
  user           User             @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  ProductInvoice ProductInvoice[]
}

model ProductInvoice {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  invoiceId BigInt   @db.UnsignedBigInt
  productId BigInt   @db.UnsignedBigInt
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
  invoice   Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model ProductReview {
  id           BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  rating       String      @db.VarChar(10)
  description  String      @db.VarChar(1000)
  productId    BigInt      @db.UnsignedBigInt
  profileId    BigInt      @db.UnsignedBigInt
  createdAt    DateTime    @default(now()) @db.Timestamp(0)
  updatedAt    DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  UserProfiles UserProfile @relation(fields: [profileId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product      Product     @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}
